{"version":3,"sources":["components/Header.tsx","components/aboutMe/IconComponents.tsx","components/aboutMe/TerminalView.tsx","components/aboutMe/AboutMe.tsx","components/projects/Projects.tsx","components/work/WorkExperience.tsx","components/ContentContainer.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["HeaderComponent","currentMenuInView","isMobile","className","theme","mode","defaultSelectedKeys","selectedKeys","selectable","href","target","rel","Item","Icons","FaJava","FaPython","FaHtml5","FaCss3Alt","FaNode","FaReact","FaAngular","FaGithubAlt","FaAws","FaDocker","SiSpring","SiDjango","SiMysql","SiPostgresql","SiElasticsearch","SiTypescript","SiJavascript","DiRuby","DiMongodb","DiRedis","IoLogoJavascript","GrOracle","TerminalView","educationMsg","userName","terminalStyle","marginLeft","width","style","id","AboutMe","useState","programming","web","tools","databases","certifications","skills","setSkills","useEffect","axios","get","then","resp","catch","console","log","renderSkills","skill","skill_list","res","forEach","skill_item","push","color","icon","size","src","alt","preview","Meta","Card","Projects","projects","setProjects","err","pageSize","grid","gutter","xs","sm","md","lg","xl","xxl","pagination","dataSource","renderItem","project","cover","headerImg","title","description","accomplishments","respItem","FireTwoTone","WorkExperience","work","setWork","itemLayout","item","extra","links","length","span","offset","LinkOutlined","linksTitle","bordered","linkItem","avatar","logo","link","shape","position","companyName","EnvironmentOutlined","location","startDate","endDate","additionalPosition","responsibilities","text","mobileText","useOnScreen","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","threshold","observe","current","disconnect","ContentContainer","setMenuInView","aboutRef","useRef","workRef","projectRef","aboutVisible","setMenuCallback","workVisible","projectVisible","setCurrentMenu","App","window","innerWidth","Header","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f98921a2.chunk.js","sourcesContent":["import { Menu } from \"antd\"\nimport { FaLinkedin, FaGithub } from \"react-icons/fa\"\nimport { IoPersonCircleOutline, IoCodeWorkingOutline } from \"react-icons/io5\"\nimport { GrProjects } from \"react-icons/gr\"\n\nconst HeaderComponent = ({ currentMenuInView, isMobile }: any) => {\n    return (\n        <div className=\"header\">\n            <Menu\n                theme=\"light\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={[\"about\"]}\n                selectedKeys={[currentMenuInView]}\n                selectable={!isMobile}\n            >\n                {!isMobile && currentMenuInView != \"about\" && (\n                    <a\n                        href=\"https://www.linkedin.com/in/hemanthnhs/\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        className=\"header-name\"\n                    >\n                        #Hemanth\n                    </a>\n                )}\n                <Menu.Item>\n                    <a\n                        href=\"https://www.linkedin.com/in/hemanthnhs/\"\n                        target=\"_blank\"\n                        className=\"linkedin-btn\"\n                        rel=\"noreferrer\"\n                    >\n                        <FaLinkedin />\n                    </a>\n                </Menu.Item>\n                <Menu.Item>\n                    <a\n                        href=\"https://github.com/hemanthnhs\"\n                        target=\"_blank\"\n                        className=\"github-btn\"\n                        rel=\"noreferrer\"\n                    >\n                        <FaGithub />\n                    </a>\n                </Menu.Item>\n                {!isMobile && (\n                    <>\n                        <Menu.Item className=\"pull-right\" key=\"project\">\n                            <a href=\"#projects\">\n                                <GrProjects className=\"logo-btn\" />\n                                Projects\n                            </a>\n                        </Menu.Item>\n                        <Menu.Item className=\"pull-right\" key=\"work\">\n                            <a href=\"#work\">\n                                <IoCodeWorkingOutline className=\"logo-btn\" />\n                                Work Experience\n                            </a>\n                        </Menu.Item>\n                        <Menu.Item className=\"pull-right\" key=\"about\">\n                            <a href=\"#\">\n                                <IoPersonCircleOutline className=\"logo-btn\" />\n                                About Me\n                            </a>\n                        </Menu.Item>\n                    </>\n                )}\n            </Menu>\n        </div>\n    )\n}\n\nexport default HeaderComponent\n","import {\n    FaJava,\n    FaPython,\n    FaHtml5,\n    FaCss3Alt,\n    FaNode,\n    FaReact,\n    FaAngular,\n    FaGithubAlt,\n    FaAws,\n    FaDocker,\n} from \"react-icons/fa\"\nimport {\n    SiSpring,\n    SiDjango,\n    SiMysql,\n    SiPostgresql,\n    SiElasticsearch,\n    SiTypescript,\n    SiJavascript,\n} from \"react-icons/si\"\nimport { DiRuby, DiMongodb, DiRedis } from \"react-icons/di\"\nimport { IoLogoJavascript } from \"react-icons/io\"\nimport { GrOracle } from \"react-icons/gr\"\n\nexport let Icons: any = {\n    FaJava: <FaJava />,\n    FaPython: <FaPython />,\n    FaHtml5: <FaHtml5 />,\n    FaCss3Alt: <FaCss3Alt />,\n    FaNode: <FaNode />,\n    FaReact: <FaReact />,\n    FaAngular: <FaAngular />,\n    FaGithubAlt: <FaGithubAlt />,\n    FaAws: <FaAws />,\n    FaDocker: <FaDocker />,\n    SiSpring: <SiSpring />,\n    SiDjango: <SiDjango />,\n    SiMysql: <SiMysql />,\n    SiPostgresql: <SiPostgresql />,\n    SiElasticsearch: <SiElasticsearch />,\n    SiTypescript: <SiTypescript />,\n    SiJavascript: <SiJavascript />,\n    DiRuby: <DiRuby />,\n    DiMongodb: <DiMongodb />,\n    DiRedis: <DiRedis />,\n    IoLogoJavascript: <IoLogoJavascript />,\n    GrOracle: <GrOracle />,\n}\n","import \"./AboutMe.css\"\n\nconst TerminalView = ({ isMobile }: { isMobile: boolean }) => {\n    const educationMsg = isMobile\n        ? \"Masters in Computer Science from NEU\"\n        : \"Master of Science in Computer Science from Northeastern University\"\n    const userName: string = \"hemanth\"\n    const terminalWebStyle: any = { marginLeft: \"15%\", width: \"70%\" }\n    const terminalMobileStyle: any = { marginLeft: \"3%\", width: \"94%\" }\n    const terminalStyle = isMobile ? terminalMobileStyle : terminalWebStyle\n    return (\n        <div>\n            <div style={terminalStyle} id=\"terminal-bar\">\n                <h1 className=\"terminal-heading\">Hemanth Sai Nimmala: ~</h1>\n            </div>\n            <div style={terminalStyle} className=\"terminal\">\n                <div>\n                    <span className=\"terminal-user\">\n                        {userName}@Work:<span className=\"tilde-seperation\">~</span>\n                        <span className=\"dollar-prompt\">$</span>\n                    </span>\n                    <span\n                        className={\"terminal-text\" + (isMobile && \" mobile-block\")}\n                    >\n                        <p className=\"inline\">\n                            Senior Software Engineer at Fidelity Investments\n                        </p>\n                    </span>\n                </div>\n                {!isMobile && <div>\n                    <span className=\"terminal-user\">\n                        {userName}@Previous:<span className=\"tilde-seperation\">~</span>\n                        <span className=\"dollar-prompt\">$</span>\n                    </span>\n                    <span\n                        className={\"terminal-text\" + (isMobile && \" mobile-block\")}\n                    >\n                        <p className=\"inline\">\n                            Ex-Software Engineer at OpenText, Voonik\n                        </p>\n                    </span>\n                </div>\n                }\n                \n                <div>\n                    <span className=\"terminal-user\">\n                        {userName}@Education:\n                        <span className=\"tilde-seperation\">~</span>\n                        <span className=\"dollar-prompt\">$</span>\n                    </span>\n                    <span\n                        className={\"terminal-text\" + (isMobile && \" mobile-block\")}\n                    >\n                        <p className=\"inline\">{educationMsg}</p>\n                    </span>\n                </div>\n                <div>\n                    <span className=\"terminal-user\">\n                        {userName}@Interest:\n                        <span className=\"tilde-seperation\">~</span>\n                        <span className=\"dollar-prompt\">$</span>\n                    </span>\n                    <span\n                        className={\"terminal-text\" + (isMobile && \" mobile-block\")}\n                    >\n                        <p className=\"inline\">\n                            I love developing Software Applications...\n                        </p>\n                    </span>\n                    <span id=\"terminal-cursor-prompt\"></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TerminalView\n","import \"./AboutMe.css\"\nimport { Avatar, Image } from \"antd\"\nimport { Tag } from \"antd\"\nimport { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport { Icons } from \"./IconComponents\"\nimport TerminalView from \"./TerminalView\"\nconst AboutMe = ({ isMobile }: { isMobile: boolean }) => {\n    const [skills, setSkills] = useState<any>({\n        programming: [],\n        web: [],\n        tools: [],\n        databases: [],\n        certifications: [],\n    })\n    useEffect(() => {\n        axios\n            .get(\"./data/skills.json\")\n            .then((resp) => {\n                setSkills(resp[\"data\"])\n            })\n            .catch((resp) => {\n                console.log(\"Error occcured while fetching work details\", resp)\n            })\n    }, [])\n\n    const renderSkills = (skill: string) => {\n        let skill_list = skills[skill]\n        let res: any = []\n        skill_list.forEach((skill_item: [\"string\", \"string\"]) => {\n            if (skill_item[1]) {\n                res.push(\n                    <Tag\n                        key={skill_item[0]}\n                        className=\"skill-tag\"\n                        color=\"#55acee\"\n                        icon={Icons[skill_item[1]]}\n                    >\n                        {skill_item[0]}\n                    </Tag>\n                )\n            } else {\n                res.push(\n                    <Tag className=\"skill-tag\" color=\"#55acee\" key={skill_item[0]}>\n                        {skill_item[0]}\n                    </Tag>\n                )\n            }\n        })\n        return <span>{res}</span>\n    }\n    return (\n        <div>\n            <div className=\"intro\">\n                <div className=\"text-center\">\n                    <Avatar\n                        size={120}\n                        icon={\n                            <Image\n                                src={\"./assets/images/profile-image.jpeg\"}\n                                alt=\"Hemanth Sai Nimmala\"\n                                preview={false}\n                            />\n                        }\n                        alt=\"Hemanth Sai Nimmala\"\n                    />\n                </div>\n                <div className=\"text-center\">\n                    Hey I&apos;m\n                    <span className=\"name\">\n                        &nbsp;#<h1 className=\"inline-heading\">Hemanth</h1>\n                    </span>\n                </div>\n                <TerminalView isMobile={isMobile} />\n                <div className=\"text-center\">\n                    <span\n                        className={\"skill-label\" + (isMobile ? \" mobile-block\" : \"\")}\n                    >\n                        Languages & Frameworks\n                    </span>\n                    {renderSkills(\"programming\")}\n                </div>\n                <div className=\"text-center\">\n                    <span\n                        className={\"skill-label\" + (isMobile ? \" mobile-block\" : \"\")}\n                    >\n                        Web Technologies\n                    </span>\n                    {renderSkills(\"web\")}\n                </div>\n                <div className=\"text-center\">\n                    <span\n                        className={\"skill-label\" + (isMobile ? \" mobile-block\" : \"\")}\n                    >\n                        Databases\n                    </span>\n                    {renderSkills(\"databases\")}\n                </div>\n                <div className=\"text-center\">\n                    <span\n                        className={\"skill-label\" + (isMobile ? \" mobile-block\" : \"\")}\n                    >\n                        Tools\n                    </span>\n                    {renderSkills(\"tools\")}\n                </div>\n                <div className=\"text-center\">\n                    <span\n                        className={\"skill-label\" + (isMobile ? \" mobile-block\" : \"\")}\n                    >\n                        Certifications\n                    </span>\n                    {renderSkills(\"certifications\")}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AboutMe\n","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { List, Card } from \"antd\"\nimport { FireTwoTone } from \"@ant-design/icons\"\nimport \"./Projects.css\"\n\nconst { Meta } = Card\n\nconst Projects = ({ isMobile }: { isMobile: boolean }) => {\n    const [projects, setProjects] = useState([])\n    useEffect(() => {\n        axios\n            .get(\"./data/projects.json\")\n            .then((resp) => {\n                setProjects(resp[\"data\"])\n            })\n            .catch((err) => {\n                console.log(\"Error occured while getting projects data\", err)\n            })\n    }, [])\n    let pageSize: number = isMobile ? 1 : 4\n    return (\n        <List\n            grid={{\n                gutter: 16,\n                xs: 1,\n                sm: 2,\n                md: 3,\n                lg: 3,\n                xl: 4,\n                xxl: 4,\n            }}\n            pagination={{\n                pageSize: pageSize,\n            }}\n            dataSource={projects}\n            renderItem={(project: any) => (\n                <List.Item>\n                    <Card\n                        cover={\n                            <img\n                                alt=\"example\"\n                                className=\"project-img\"\n                                src={project.headerImg}\n                            />\n                        }\n                    >\n                        <Meta\n                            title={project.title}\n                            description={\n                                <List\n                                    className=\"project-accomplishment-list\"\n                                    size=\"small\"\n                                    dataSource={project.accomplishments}\n                                    renderItem={(respItem: any) => (\n                                        <List.Item className=\"project-accomplishment\">\n                                            <p>\n                                                <span>\n                                                    <FireTwoTone />\n                                                </span>\n                                                {respItem}\n                                            </p>\n                                        </List.Item>\n                                    )}\n                                />\n                            }\n                        />\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nexport default Projects\n","import \"./WorkExperience.css\"\nimport { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport { List, Avatar, Col, Card } from \"antd\"\nimport { EnvironmentOutlined, FireTwoTone, LinkOutlined } from \"@ant-design/icons\"\n\nconst WorkExperience = ({ isMobile }: { isMobile: boolean }) => {\n    const [work, setWork] = useState([])\n    useEffect(() => {\n        axios\n            .get(\"./data/work.json\")\n            .then((resp) => {\n                setWork(resp[\"data\"])\n            })\n            .catch((resp) => {\n                console.log(\"Error occcured while fetching work details\", resp)\n            })\n    }, [])\n    return (\n        <div>\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={work}\n                renderItem={(item: any) => (\n                    <List.Item\n                        extra={\n                            !isMobile &&\n                            item.links.length != 0 && (\n                                <Col span={4} offset={1}>\n                                    <Card\n                                        className=\"link-card\"\n                                        title={\n                                            <>\n                                                <LinkOutlined />\n                                                {item.linksTitle}\n                                            </>\n                                        }\n                                        bordered={false}\n                                    >\n                                        {\n                                            <List\n                                                itemLayout=\"horizontal\"\n                                                dataSource={item.links}\n                                                renderItem={(linkItem: any) => (\n                                                    <List.Item className=\"links-list-item\">\n                                                        <List.Item.Meta\n                                                            className=\"links-list-item-meta\"\n                                                            avatar={\n                                                                <Avatar\n                                                                    src={\n                                                                        linkItem.logo\n                                                                    }\n                                                                />\n                                                            }\n                                                            title={\n                                                                <a\n                                                                    href={\n                                                                        linkItem.link\n                                                                    }\n                                                                    className=\"links-list-item-title\"\n                                                                >\n                                                                    {linkItem.title}\n                                                                </a>\n                                                            }\n                                                        />\n                                                    </List.Item>\n                                                )}\n                                            />\n                                        }\n                                    </Card>\n                                </Col>\n                            )\n                        }\n                    >\n                        <List.Item.Meta\n                            avatar={\n                                <Avatar\n                                    src={\"/assets/images/\" + item.logo}\n                                    size={100}\n                                    shape=\"square\"\n                                />\n                            }\n                            title={\n                                <>\n                                    {isMobile ? (\n                                        <>\n                                            <h1 className=\"work-position\">\n                                                {item.position}\n                                            </h1>\n                                            <h1 className=\"work-company\">\n                                                {item.companyName}\n                                            </h1>\n                                            <div\n                                                className={\n                                                    \"work-location\" +\n                                                    (isMobile\n                                                        ? \" no-margin-left\"\n                                                        : \"\")\n                                                }\n                                            >\n                                                <span className=\"work-loc-icon\">\n                                                    <EnvironmentOutlined />\n                                                </span>\n                                                {item.location}\n                                            </div>\n                                            <div\n                                                className={\n                                                    \"work-dates\" +\n                                                    (isMobile\n                                                        ? \" no-margin-left\"\n                                                        : \"\")\n                                                }\n                                            >\n                                                {item.startDate + \" - \"}\n                                                {item.endDate\n                                                    ? item.endDate\n                                                    : \"Present\"}\n                                            </div>\n                                            {item.additionalPosition && (\n                                                <div\n                                                    className={\n                                                        \"work-dates\" +\n                                                        (isMobile\n                                                            ? \" no-margin-left\"\n                                                            : \"\")\n                                                    }\n                                                >\n                                                    {item.additionalPosition\n                                                        .startDate + \" - \"}\n                                                    {item.additionalPosition\n                                                        .endDate +\n                                                        \" (\" +\n                                                        item.additionalPosition\n                                                            .position +\n                                                        \")\"}\n                                                </div>\n                                            )}\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div>\n                                                <h3 className=\"work-position inline-heading\">\n                                                    {item.position}\n                                                </h3>\n                                                <span className=\"work-dates\">\n                                                    {item.startDate + \" - \"}\n                                                    {item.endDate\n                                                        ? item.endDate\n                                                        : \"Present\"}\n                                                </span>\n                                                {item.additionalPosition && (\n                                                    <span className=\"work-dates-additional\">\n                                                        ,\n                                                    </span>\n                                                )}\n                                                {item.additionalPosition && (\n                                                    <span className=\"work-dates\">\n                                                        {item.additionalPosition\n                                                            .startDate + \" - \"}\n                                                        {item.additionalPosition\n                                                            .endDate +\n                                                            \" (\" +\n                                                            item.additionalPosition\n                                                                .position +\n                                                            \")\"}\n                                                    </span>\n                                                )}\n                                            </div>\n                                            <div>\n                                                <h3 className=\"work-company inline-heading\">\n                                                    {item.companyName}\n                                                </h3>\n                                                <span className=\"work-location\">\n                                                    <span className=\"work-loc-icon\">\n                                                        <EnvironmentOutlined />\n                                                    </span>\n                                                    {item.location}\n                                                </span>\n                                            </div>\n                                        </>\n                                    )}\n                                </>\n                            }\n                            description={\n                                !isMobile && (\n                                    <List\n                                        className=\"work-responsibility-list\"\n                                        size=\"small\"\n                                        dataSource={item.responsibilities}\n                                        renderItem={(respItem: any) => (\n                                            <List.Item className=\"work-responsibility\">\n                                                <p>\n                                                    <span className=\"work-responsibility-icon\">\n                                                        <FireTwoTone />\n                                                    </span>\n                                                    {respItem.text}\n                                                </p>\n                                            </List.Item>\n                                        )}\n                                    />\n                                )\n                            }\n                        />\n                        {isMobile && (\n                            <List\n                                className=\"work-responsibility-list\"\n                                size=\"small\"\n                                dataSource={item.responsibilities}\n                                renderItem={(respItem: any) => (\n                                    <List.Item className=\"work-responsibility\">\n                                        <p>\n                                            <span className=\"work-responsibility-icon\">\n                                                <FireTwoTone />\n                                            </span>\n                                            {respItem.mobileText\n                                                ? respItem.mobileText\n                                                : respItem.text}\n                                        </p>\n                                    </List.Item>\n                                )}\n                            />\n                        )}\n                    </List.Item>\n                )}\n            />\n        </div>\n    )\n}\n\nexport default WorkExperience\n","import AboutMe from \"./aboutMe/AboutMe\"\nimport ProjectContainer from \"./projects/Projects\"\nimport WorkExperience from \"./work/WorkExperience\"\nimport { Divider } from \"antd\"\nimport { useEffect, useRef, useState } from \"react\"\n\nconst useOnScreen = (ref: any) => {\n    const [isIntersecting, setIntersecting] = useState(false)\n\n    const observer = new IntersectionObserver(\n        ([entry]) => {\n            setIntersecting(entry.isIntersecting)\n        },\n        { threshold: 0.5 }\n    )\n\n    useEffect(() => {\n        observer.observe(ref.current)\n        return () => {\n            observer.disconnect()\n        }\n    }, [])\n\n    return isIntersecting\n}\n\nconst setCurrentMenu = (\n    setMenuCallback: any,\n    aboutVisible: boolean,\n    workVisible: boolean,\n    projectVisible: boolean\n) => {\n    if (aboutVisible) {\n        setMenuCallback(\"about\")\n    } else if (projectVisible) {\n        setMenuCallback(\"project\")\n    } else {\n        setMenuCallback(\"work\")\n    }\n}\n\nconst ContentContainer = ({ setMenuInView, isMobile }: any) => {\n    const aboutRef: any = useRef()\n    const workRef: any = useRef()\n    const projectRef: any = useRef()\n    const aboutVisible = useOnScreen(aboutRef)\n    const workVisible = useOnScreen(workRef)\n    const projectVisible = useOnScreen(projectRef)\n    setCurrentMenu(setMenuInView, aboutVisible, workVisible, projectVisible)\n    return (\n        <div>\n            <div ref={aboutRef} className=\"view-container\" id=\"about\">\n                <AboutMe isMobile={isMobile} />\n            </div>\n            <span id=\"work\"></span>\n            <Divider>{isMobile && \"Work\"}</Divider>\n            <div ref={workRef} className=\"view-container\">\n                <WorkExperience isMobile={isMobile} />\n            </div>\n            <Divider>{isMobile && \"Projects\"}</Divider>\n            <div ref={projectRef} className=\"view-container\" id=\"projects\">\n                <ProjectContainer isMobile={isMobile} />\n            </div>\n        </div>\n    )\n}\n\nexport default ContentContainer\n","import \"./App.css\"\nimport Header from \"./components/Header\"\nimport ContentContainer from \"./components/ContentContainer\"\nimport { Row, Col } from \"antd\"\nimport { useState } from \"react\"\n\nconst App = () => {\n    const [currentMenuInView, setMenuInView] = useState(\"about\")\n    const isMobile = window.innerWidth < 480\n    return (\n        <div>\n            <Header isMobile={isMobile} currentMenuInView={currentMenuInView} />\n            <Row>\n                <Col offset={1} span={22}>\n                    <ContentContainer\n                        isMobile={isMobile}\n                        setMenuInView={setMenuInView}\n                    />\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}